/*
    This file is meant to be ran on your local DB with PHPMyAdmin. This creates a set of normalized tables
    (no repetitive data/duplicate entries) with atomized attributes (no repetitive/duplicate *portions* of attributes).
    A function in the data layer has been created to query these tables to form a listing object.

*/

CREATE TABLE instrument
(
	instID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	instType VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE brand
(
	brandID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	brandName VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE specKey
(
	specKeyID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	specKeyName VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE specVal
(
	specValID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	specValName VARCHAR(255) NOT NULL,
    specKeyID INT NOT NULL,
	FOREIGN KEY (specKeyID) REFERENCES specKey(specKeyID)
);

CREATE TABLE specValLst
(
	lstID INT NOT NULL,
	specValID INT NOT NULL,
	FOREIGN KEY (lstID) REFERENCES listing(lstID),
	FOREIGN KEY (specValID) REFERENCES specVal(specValID),
	PRIMARY KEY (lstID, specValID)
);

CREATE TABLE listing
(
	lstID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	lstCode VARCHAR(255) NOT NULL UNIQUE,
	lstName VARCHAR(255) NOT NULL,
	lstPrice DECIMAL(6,2) NOT NULL,
	lstSale DECIMAL(2,2) NOT NULL,
	lstDesc TEXT(500),
	timeAdded DATETIME DEFAULT NOW(),
    brandID INT NOT NULL,
    instID INT NOT NULL,
	FOREIGN KEY (brandID) REFERENCES brand(brandID),
	FOREIGN KEY (instID) REFERENCES instrument(instID)
);

CREATE TABLE users
(
    userID INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    isAdmin BIT NOT NULL DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE orders
(
    ordID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    timeAdded DATETIME DEFAULT NOW(),
    userID INT NOT NULL,
    FOREIGN KEY (userID) REFERENCES users(userID)
);

CREATE TABLE ordLst
(
    ordID INT NOT NULL,
    lstID INT NOT NULL,
    FOREIGN KEY (ordID) REFERENCES orders(ordID),
    FOREIGN KEY (lstID) REFERENCES listing(lstID)
);